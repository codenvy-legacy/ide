#
# Copyright (c) 2012-2014 Codenvy, S.A.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#   Codenvy, S.A. - initial API and implementation
#

###########BUTTONS##################
button.add=Add
button.cancel=Cancel
button.create=Create
button.checkout=Checkout
button.delete=Delete
button.rename=Rename
button.close=Close
button.commit=Commit
button.merge=Merge
button.reset=Reset
button.remove=Remove
button.ok=OK
button.init=Init
button.fetch=Fetch
button.push=Push
button.pull=Pull
button.finish=Finish

############MESSAGES################
messages.nothing_changed=Nothing changed.
messages.index_empty=Index is empty
messages.not_git_repository=fatal: Not a git repository (or any parent up to mount parent)
messages.workspace_selected=Operations with Git cannot be done in root folder(workspace).
messages.selected_items_fail=Please, select item(s), you want to add, in browser tree.
messages.add_success=Successfully added to index.
messages.add_failed=Failed to add changes to index.
messages.remove_files_success=Removal was successful.
messages.remove_files_failed=Files removal failed.
messages.branches_list_failed=Failed to get branches list.
messages.branch_create_failed=Creating a new branch failed.
messages.branch_checkout_failed=Branch checkout failed.
messages.branch_delete_failed=Failed to delete branch.
messages.branch_rename_failed=Failed to rename branch.
messages.clone_success=<b>{0}</b> successfully cloned.
messages.clone_failed=Failed to clone <b>{0}</b>.
messages.commit_success=Successfully committed.
messages.commit_failed=Commit failed.
messages.diff.failed=Diff failed.
messages.findResource.failed=Find to find resource.
messages.getContent.failed=Get content resource failed.
messages.refreshChildren.failed=Can not refresh children for project
messages.nothing_to_commit=Nothing to commit.
messages.log_failed=Failed to get history of commits.
messages.init_success=Repository successfully initialized.
messages.init_failed=Failed to initialize repository.
messages.push_success=Successfully pushed to <b>{0}</b>
messages.push_fail=Failed to push to remote repository.
messages.pull_success=Successfully pulled from <b>{0}</b>
messages.pull_fail=Failed to pull from <b>{0}</b>
messages.fetch_success=Successfully fetched from <b>{0}</b>
messages.fetch_fail=Failed to fetch from <b>{0}</b>
messages.remote_list_failed=No remote repositories are found.
messages.remote_add_failed=Failed to add remote repository.
messages.remote_delete_failed=Failed to delete remote repository.
messages.reset_files_failed=Failed to reset index.
messages.reset_files_successfully=Index successfully reset.
messages.nothing_to_reset=Nothing to reset.
messages.reset_successfully=Successfully reset.
messages.reset_fail=Reset to revision failed.
messages.repository_already_exists=Git repository already exists in this or parent folder.
messages.status_failed=Failed to get work tree status.
messages.selected_remote_fail=Remote repository must be selected.
messages.delete_remote_repository.title=Failed to delete remote repository
messages.delete_remote_repository.question=Are you sure you want to delete <b>{0}</b>?
messages.delete_repository.title=Delete Git repository
messages.delete_repository.question=Are you sure you want to delete <b>{0}</b>?
messages.delete_success=Git repository successfully deleted.
messages.use.ssh.protocol = Please, use SSH protocol for push operations.

############UNMARSHALLER ERRORS################
merge.unmarshal.failed=Failed to parse merge result.

############InitRequestHadler##################
init.started=Initializing <b>{0}</b> repository.
init.finished=Repository <b>{0}</b> successfully initialized.

############CloneRequestHandler################
clone.started=<b>{0}</b> : Cloning <b>{1}</b>.
clone.finished=<b>{0}</b> : <b>{1}</b> cloned successfully.

############PushRequestHandler#################
push.started=<b>{0}</b> : Pushing <b>{1}</b> to <b>{2}</b>.
push.finished=<b>{0}</b> : <b>{1}</b> successfully pushed to <b>{2}</b>.

############PullRequestHandler#################
pull.started=<b>{0}</b> : Pulling from <b>{1}</b> to <b>{2}</b>.
pull.finished=<b>{0}</b> : <b>{1}</b> successfully pulled to <b>{2}</b>.

############FetchRequestHandler################
fetch.started=<b>{0}</b> Fetching from <b>{1}</b> to <b>{2}</b>.
fetch.finished=<b>{0}</b> ><b>{1}</b> successfully fetched to <b>{2}</b>.

############AddRequestHandler##################
add.started=<b>{0}</b> : Adding updates to Git index...
add.finished=<b>{0}</b> : Updates successfully added to Git index.

############RemoveRequestHandler##################
remove.started=<b>{0}</b> : Removing from Git index...
remove.finished=<b>{0}</b> : Successfully removed from Git index.

############CommitRequestHandler###############
commit.started=<b>{0}</b> <i>[master] {1}</i> Committing updates...
commit.finished=<b>{0}</b> <i>[master] {1}</i> Updates successfully committed.

################VIEWS##################
#Add
view.add_to_index.all_changes=Add all changes in repository to index?
view.add_to_index.folder=Add content of folder <b>{0}</b> to index?
view.add_to_index.file=Add file <b>{0}</b> to index?
view.add_to_index.update_field_title=Update (do not add new files to index)
view.add_to_index.title=Add to index
#Branch
view.branch.grid.name_column=Name
view.branch.ceate_new=Create new branch
view.branch.type_new=Enter branch name:
view.branch.delete=Delete branch
view.branch.delete_ask=Are you sure you want to delete branch <b>{0}</b>?
view.branch.rename=Rename branch
view.branch.rename.description=Enter new branch name
view.branch.title=Branches
#Reset
view.reset.files.title=Select files to reset
view.reset.commit.title=Reset to commit
view.reset.soft.type.title=soft
view.reset.soft.type.description=(Just change the ref, the index and workdir are not changed.)
view.reset.mixed.type.title=mixed
view.reset.mixed.type.description=(Change the ref and the index, the workdir is not changed.)
view.reset.hard.type.title=hard
view.reset.hard.type.description=(Change the ref, the index and the workdir)
view.reset.keep.type.title=keep
view.reset.keep.type.description=(Change the ref, the index and the workdir that are different between respective commit and HEAD)
view.reset.merge.type.title=merge
view.reset.merge.type.description=(Resets the index and updates the files in the working tree that are different between respective commit and HEAD, but keeps those which are different between the index and working tree)
#Remove
view.remove_from_index.all=Are you sure you want to remove the entire project from index?
view.remove_from_index.only=Remove only from index (file will be untouched)
view.remove_from_index.folder=Remove content of folder <b>{0}</b> from index?
view.remove_from_index.file=Remove file <b>{0}</b> from index?
view.remove_from_index.title=Remove From Index

#Commit
view.commit.commit_message=Committed with revision <b>\#{0}</b> at time {1}
view.commit.commit_user= by user {0}
view.commit.title=Commit to repository
view.commit.message_field_title=Enter commit message:
view.commit.all_field_title=Add all changes except of new files
view.commit.amend_field_title=Amend previous commit
view.commit.grid.date=Date
view.commit.grid.commiter=Committer
view.commit.grid.comment=Comment

#Create
view.create.title=Initialize local repository
view.create.workdir.field.title=Work directory
view.create.bare.field.title=Bare repository

#Fetch
view.fetch.title=Fetch from remote repository
view.fetch.remote.field.title=Choose remote repository :
view.fetch.remote.branches.title=Fetch from remote branch:
view.fetch.local.branches.title=To local branch:
view.fetch.all.branches.field.title=Fetch all branches
view.fetch.remove.deleted.refs.title=Remove deleted refs

#Push
view.push.title=Push to remote repository
view.push.remote.field=Choose remote repository:
view.push.local_branch.field=Push from branch:
view.push.remote_branch.field=To branch:

#Remote
view.remote.name.field=Name:
view.remote.location.field=Location:
view.remote.grid.name.field=Name
view.remote.grid.location.field=Location
view.remotes.title=Remote repositories

#History
view.history.diff.index.state=<b>index state</b>
view.history.diff.tree.state=<b>working tree state</b>
view.history.nothing.to.display=<b>nothing for compare</b>
view.history.title=History
view.history.refresh.button.title=Refresh revision list
view.history.project.changes.button.title=Show changes in project
view.history.resource.changes.button.title=Show changes of selected resource
view.history.diff.with.index.button.title=Show diff with index
view.history.diff.with.work.tree.button.title=Show diff with working tree
view.history.diff.with.prev.version.button.title=Show diff with previous version
view.history.revisionA.title=Rev.A:
view.history.revisionB.title=Rev.B:
view.history.date.title=Date:

#Pull
view.pull.title=Pull from remote repository
view.pull.remote.field.title=Choose remote repository :
view.pull.remote.branches.title=Pull from remote branch:
view.pull.local.branches.title=To local branch:

#Merge
view.merge.title=Merge with current HEAD
merged.commits=Merged commits:<br>{0}
merged.new.head=New HEAD commit: {0}
merged.conflicts=Conflicts:<br>{0}

############ CONTROLS ################
control.add.id=Git/Add...
control.add.title=Add...
control.add.prompt=Add Changes to Index
control.branches.id=Git/Branches...
control.branches.title=Branches...
control.branches.prompt=Work With Branches...
control.clone.id=Git/Clone Repository...
control.delete.id=Git/Delete Repository...
control.delete.title=Delete Repository...
control.delete.prompt=Delete Git Repository...
control.commit.id=Git/Commit...
control.commit.title=Commit...
control.commit.prompt=Commit... 
control.fetch.id=Git/Remote/Fetch...
control.fetch.title=Fetch...
control.fetch.prompt=Fetch Data from Remote Repository...
control.init.id=Git/Initialize Repository
control.init.title=Initialize Repository
control.init.prompt=Initialize Repository
control.merge.id=Git/Merge...
control.merge.title=Merge...
control.merge.prompt=Merge branch with Head...
control.pull.id=Git/Remote/Pull...
control.pull.title=Pull...
control.pull.prompt=Pull Data from Remote Repository...
control.push.id=Git/Remote/Push...
control.push.title=Push...
control.push.prompt=Push Changes to Remote Repository...
control.remote.id=Git/Remote
control.remote.title=Remote
control.remote.prompt=Remote
control.remotes.id=Git/Remote/Remotes...
control.remotes.title=Remotes...
control.remotes.prompt=The List of the Remote Repositories...
control.remove.id=Git/Remove...
control.remove.title=Remove...
control.remove.prompt=Remove Changes from Index...
control.resetFiles.id=Git/Reset Index...
control.resetFiles.title=Reset Index...
control.resetFiles.prompt=Reset Index...
control.resetToCommit.id=Git/Reset...
control.resetToCommit.title=Reset...
control.resetToCommit.prompt=Reset to Revision...
control.history.id=Git/Show History...
control.history.title=Show History...
control.history.prompt=Show History...
control.status.id=Git/Status
control.status.title=Status
control.status.prompt=Show the Work Tree Status
control.ro.url.id=Git/Git URL (Read-Only)...
control.ro.url.title=Git URL (Read-Only)...
control.ro.url.prompt=Project Git URL

############### CloneRepositoryView ###############
noIncorrectProjectNameTitle = Incorrect project name
noIncorrectProjectNameMessage = Project name must contain only Latin letters, digits or these following special characters -._
projectNameStartWith_Message = Project name cannot start with character _

############### Welcome page ###############
welcome.clone.title=Clone a Git Repository
welcome.clone.text=Create a new project from any public Git repository.

############### ProjectView ###############
project.name=Project name:

############### SamplesListGrid ###############
samplesListGrid.column.name=Project
samplesListGrid.column.description=Description
samplesListGrid.column.type=Type
