<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2012-2014 Codenvy, S.A.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
      Codenvy, S.A. - initial API and implementation

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>codenvy-ide-parent</artifactId>
        <groupId>com.codenvy.ide</groupId>
        <version>3.0.0-M18-SNAPSHOT</version>
    </parent>
    <artifactId>codenvy-runner-webapps</artifactId>
    <packaging>jar</packaging>
    <name>Codenvy Runner :: WebApps</name>
    <dependencies>
        <dependency>
            <groupId>com.codenvy.platform-api</groupId>
            <artifactId>codenvy-api-runner</artifactId>
            <version>${codenvy.platform-api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.codenvy.platform-api-gwt-client</groupId>
            <artifactId>codenvy-gwt-client-commons</artifactId>
            <version>${codenvy.platform-api-gwt-client.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-clean-tomcat</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.tomcat</groupId>
                                    <artifactId>tomcat</artifactId>
                                    <type>zip</type>
                                    <version>${org.apache.tomcat.version}</version>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                    <destFileName>tomcat.zip</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-tomcat-bundle</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <!-- Unzip Tomcat package -->
                                <unzip dest="${project.build.directory}/classes" src="${project.build.directory}/classes/tomcat.zip">
                                    <patternset>
                                        <exclude name="**/webapps/**" />
                                    </patternset>
                                </unzip>
                                <move todir="${project.build.directory}/classes/tomcat-bundle">
                                    <fileset dir="${project.build.directory}/classes/apache-tomcat-${org.apache.tomcat.version}" />
                                </move>
                                <delete file="${project.build.directory}/classes/tomcat.zip" />
                                <!-- Zip prepared Tomcat binary distribution and remove temporary directory -->
                                <zip basedir="${project.build.directory}/classes/tomcat-bundle" destfile="${project.build.directory}/classes/tomcat.zip" />
                                <delete dir="${project.build.directory}/classes/tomcat-bundle" />
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
